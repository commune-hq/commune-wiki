<script is:inline>
// === BACKLINKS INITIALIZATION ===
// Handles dynamic backlinks loading for both static and dynamically loaded panes

(function() {
  let backlinksData = null;

  async function initializeBacklinks(scope = document) {
    try {
      // Fetch backlinks data if not already loaded
      if (!backlinksData) {
        const res = await fetch('/backlinks.json');
        if (res.ok) {
          backlinksData = await res.json();
        } else {
          console.warn('Failed to load backlinks.json');
          return;
        }
      }

      // Find all backlinks sections within the scope
      const backlinksSections = scope.querySelectorAll('.backlinks');

      backlinksSections.forEach(section => {
        const slug = section.dataset.backlinksFor;
        if (!slug) return;

        const list = section.querySelector('.backlinks-list');
        if (!list) return;

        // Get backlinks for this slug
        const here = slug.endsWith('/') ? slug : slug + '/';
        const rec = backlinksData?.[here];
        const items = rec?.inbound ?? [];

        if (!items.length) {
          // Hide the entire section if no backlinks
          section.classList.add('hidden');
          return;
        }

        // Show the section and populate links
        section.classList.remove('hidden');

        // Update heading with count
        const heading = section.querySelector('h4');
        if (heading) {
          const count = items.length;
          const linkText = count === 1 ? 'link' : 'links';
          heading.textContent = `${count} ${linkText} to this note`;
        }

        const titleFor = (u) => {
          const note = backlinksData[u];
          const title = note?.title || u.split('/').filter(Boolean).pop()?.replace(/-/g,' ');
          const star = note?.isStarred ? '⭐ ' : '';
          return star + title;
        };
        list.innerHTML = items.map(s => `<li><a href="${s}">${titleFor(s)}</a></li>`).join('');
      });
    } catch (error) {
      console.error('Error initializing backlinks:', error);
    }
  }

  // Make it globally available for dynamic pane loading
  window.initializeBacklinks = initializeBacklinks;

  // Auto-initialize on DOM ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => initializeBacklinks());
  } else {
    initializeBacklinks();
  }
})();
</script>
