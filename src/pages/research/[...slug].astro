---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Header from '../../components/Header.astro';
import SearchModal from '../../components/SearchModal.astro';
import Footer from '../../components/Footer.astro';
import PlausibleScript from '../../components/PlausibleScript.astro';
import '../../styles/design-system.css';
import '../../styles/notes.css';

export async function getStaticPaths() {
	const research = await getCollection('research');
	return research.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

interface Props {
	entry: CollectionEntry<'research'>;
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const title = entry.data.title || entry.slug;

// Map slug to summary note URL and metadata
const researchMeta: Record<string, { summaryUrl: string; wordCount: string; aiSource: string; model: string; context: string }> = {
	'oss-business-models': {
		summaryUrl: '/notes/research-oss-business-models',
		wordCount: '10,200',
		aiSource: 'Claude Code',
		model: 'Claude Sonnet 3.5',
		context: 'Deep research as part of [[My Working Notes]] as I explore [[Commune]] and [[Build in Public]].'
	},
	'creator-platform-pricing': {
		summaryUrl: '/notes/research-creator-pricing-2024-2025',
		wordCount: '8,400',
		aiSource: 'Claude Code',
		model: 'Claude Sonnet 3.5',
		context: 'Deep research as part of [[My Working Notes]] as I explore [[Commune]], [[Substack]], and [[Skool]].'
	},
	'digital-garden-tech-stacks': {
		summaryUrl: '/notes/research-digital-garden-tech-stacks',
		wordCount: '9,600',
		aiSource: 'Claude Code',
		model: 'Claude Sonnet 3.5',
		context: 'Deep research as part of [[My Working Notes]] as I explore [[Commune]], [[Obsidian]], and [[Reflect]].'
	},
	'hardware-ecosystems': {
		summaryUrl: '/notes/research-hardware-ecosystems',
		wordCount: '13,800',
		aiSource: 'Claude Code',
		model: 'Claude Sonnet 3.5',
		context: 'Deep research as part of [[My Working Notes]] as I explore [[The Commune Box]].'
	},
};

const meta = researchMeta[entry.slug] || { summaryUrl: '/', wordCount: 'N/A', aiSource: 'Unknown', model: 'Unknown', context: 'Deep research as part of [[My Working Notes]].' };
const summaryUrl = meta.summaryUrl;
---
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>{title} | Commune Research</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="description" content={`Deep research: ${title}`} />

  <!-- Open Graph -->
  <meta property="og:title" content={title} />
  <meta property="og:description" content={`Deep research: ${title}`} />
  <meta property="og:type" content="article" />
  <meta property="og:url" content={Astro.url} />
  <meta property="og:site_name" content="Commune" />
  <meta property="og:image" content="https://devonmeadows.com/og-image.jpg" />

  <!-- Twitter Card -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content={title} />
  <meta name="twitter:description" content={`Deep research: ${title}`} />
  <meta name="twitter:image" content="https://devonmeadows.com/og-image.jpg" />

  <meta name="author" content={entry.data.author || 'Devon Meadows'} />
  <link rel="icon" type="image/png" href="/favicon-32x32.png" />
  <PlausibleScript domain="devonmeadows.com" />
</head>
<body>
  <Header />
  <SearchModal />

  <main style="max-width: 65ch; margin: 0 auto; padding: 2rem 1.5rem; min-height: calc(100vh - 200px);">
    <!-- Match atomic notes header exactly -->
    <div class="note-header">
      <div class="note-date">Created October 18, 2025</div>
      <a href={summaryUrl} class="back-to-summary-link">‚Üê Back to Summary</a>
    </div>

    <article class="prose research-content" style="max-width: none;">
      <Content />
    </article>

    <!-- Research info box (will be moved via JS to appear after h1) -->
    <div class="research-info-box" id="research-info-box">
      <div class="research-badge-header">üìö Deep Research</div>
      <p class="research-intro">
        {meta.context}
      </p>
      <div class="research-meta-grid">
        <div class="meta-item">
          <span class="meta-label">Generated with:</span>
          <span class="meta-value">{meta.aiSource}</span>
        </div>
        <div class="meta-item">
          <span class="meta-label">Model:</span>
          <span class="meta-value">{meta.model}</span>
        </div>
        <div class="meta-item">
          <span class="meta-label">Length:</span>
          <span class="meta-value">{meta.wordCount} words</span>
        </div>
      </div>
    </div>

    <!-- Back to top button -->
    <button id="back-to-top" class="back-to-top" aria-label="Back to top">
      ‚Üë
    </button>

    <Footer>
      <div slot="before-footer" class="research-footer-content">
        <a href={summaryUrl} class="footer-back-link">‚Üê Back to Summary</a>
        <p class="footer-context">
          Part of <a href="/">Devon Meadows' working notes</a> ¬∑ Powered by <a href="https://github.com/dmthepm/commune" target="_blank" rel="noopener">Commune</a>
        </p>
      </div>
    </Footer>
  </main>

  <script>
    // Add external link indicators to all external links
    document.addEventListener('DOMContentLoaded', () => {
      const researchContent = document.querySelector('.research-content');
      if (!researchContent) return;

      // Move info box after h1 title
      const infoBox = document.getElementById('research-info-box');
      const h1 = researchContent.querySelector('h1');
      if (infoBox && h1) {
        h1.after(infoBox);
      }

      const links = researchContent.querySelectorAll('a');
      links.forEach(link => {
        const href = link.getAttribute('href');
        if (href && (href.startsWith('http://') || href.startsWith('https://'))) {
          // Check if it's not an internal link
          if (!href.includes('devonmeadows.com')) {
            link.setAttribute('target', '_blank');
            link.setAttribute('rel', 'noopener noreferrer');
          }
        }
      });

      // Back to top button functionality
      const backToTopBtn = document.getElementById('back-to-top');
      if (backToTopBtn) {
        // Show/hide based on scroll position
        window.addEventListener('scroll', () => {
          if (window.scrollY > 500) {
            backToTopBtn.classList.add('visible');
          } else {
            backToTopBtn.classList.remove('visible');
          }
        });

        // Scroll to top on click
        backToTopBtn.addEventListener('click', () => {
          window.scrollTo({
            top: 0,
            behavior: 'smooth'
          });
        });
      }
    });
  </script>
</body>
</html>

<style is:global>
  body {
    background: var(--c-bg);
    color: var(--c-text);
  }

  /* Note header - match atomic notes style exactly */
  .note-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1.5rem;
  }

  .note-date {
    font-size: 0.85rem;
    color: var(--c-text-muted);
  }

  .back-to-summary-link {
    color: var(--c-accent);
    text-decoration: none;
    font-size: 0.85rem;
    transition: opacity 0.15s ease;
  }

  .back-to-summary-link:hover {
    opacity: 0.7;
  }

  /* Research info box */
  .research-info-box {
    margin: 2rem 0;
    padding: 1.5rem;
    background: var(--c-bg-soft);
    border-left: 3px solid var(--c-accent);
    border-radius: var(--c-radius-md);
  }

  .research-badge-header {
    font-size: 0.85rem;
    font-weight: 600;
    color: var(--c-text);
    margin-bottom: 0.75rem;
  }

  .research-intro {
    margin: 0 0 1rem 0;
    font-size: 0.95rem;
    line-height: 1.6;
    color: var(--c-text);
  }

  .research-intro a {
    color: var(--c-accent);
    text-decoration: none;
    border-bottom: 1px solid var(--c-accent);
  }

  .research-intro a:hover {
    opacity: 0.7;
  }

  .research-intro a.wikilink {
    border-bottom: 1px dashed var(--c-accent);
  }

  .research-meta-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
    margin-top: 1rem;
  }

  .meta-item {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .meta-label {
    font-size: 0.75rem;
    color: var(--c-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .meta-value {
    font-size: 0.9rem;
    color: var(--c-text);
    font-weight: 500;
  }

  @media (max-width: 768px) {
    .research-meta-grid {
      grid-template-columns: 1fr;
      gap: 0.75rem;
    }
  }

  /* Back to top button */
  .back-to-top {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    background: var(--c-bg-soft);
    border: 1px solid var(--c-border);
    color: var(--c-text);
    font-size: 1.2rem;
    cursor: pointer;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 100;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .back-to-top:hover {
    background: var(--c-bg);
    border-color: var(--c-accent);
    color: var(--c-accent);
  }

  .back-to-top.visible {
    opacity: 1;
    visibility: visible;
  }

  /* Footer content */
  .research-footer-content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 2rem;
    padding-top: 2rem;
    border-top: 1px solid var(--c-border);
  }

  .footer-back-link {
    color: var(--c-accent);
    text-decoration: none;
    font-size: 0.9rem;
    transition: opacity 0.15s ease;
  }

  .footer-back-link:hover {
    opacity: 0.7;
  }

  .footer-context {
    font-size: 0.85rem;
    color: var(--c-text-muted);
    margin: 0;
  }

  .footer-context a {
    color: var(--c-accent);
    text-decoration: none;
  }

  .footer-context a:hover {
    opacity: 0.7;
  }

  /* External link indicators */
  .research-content a[target="_blank"]::after {
    content: "‚Üó";
    display: inline-block;
    margin-left: 0.25rem;
    font-size: 0.8em;
    opacity: 0.6;
  }

  /* Research content specific styles */
  .research-content {
    line-height: 1.8;
  }

  .research-content h1 {
    font-size: 2.2rem;
    line-height: 1.2;
    margin-top: 0;
    margin-bottom: 1rem;
  }

  .research-content h2 {
    font-size: 1.6rem;
    margin-top: 3rem;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--c-border);
  }

  .research-content h3 {
    font-size: 1.3rem;
    margin-top: 2rem;
    margin-bottom: 0.75rem;
  }

  .research-content h4 {
    font-size: 1.1rem;
    margin-top: 1.5rem;
    margin-bottom: 0.5rem;
  }

  .research-content table {
    width: 100%;
    border-collapse: collapse;
    margin: 1.5rem auto;
    font-size: 0.9rem;
    max-width: max-content;
  }

  .research-content th,
  .research-content td {
    border: 1px solid var(--c-border);
    padding: 0.75rem;
    text-align: left;
  }

  .research-content th {
    background: var(--c-bg-soft);
    font-weight: 600;
  }

  .research-content code {
    background: var(--c-bg-soft);
    padding: 0.2rem 0.4rem;
    border-radius: var(--c-radius-sm);
    font-size: 0.9em;
    font-family: 'Monaco', 'Courier New', monospace;
  }

  .research-content pre {
    background: var(--c-bg-soft);
    padding: 1rem;
    border-radius: var(--c-radius-md);
    overflow-x: auto;
    margin: 1.5rem 0;
  }

  .research-content pre code {
    background: transparent;
    padding: 0;
  }

  .research-content blockquote {
    border-left: 4px solid var(--c-accent);
    padding-left: 1.5rem;
    margin: 1.5rem 0;
    color: var(--c-text-muted);
    font-style: italic;
  }

  .research-content hr {
    border: none;
    border-top: 1px solid var(--c-border);
    margin: 3rem 0;
  }

  .research-content ul,
  .research-content ol {
    margin: 1rem 0;
    padding-left: 2rem;
  }

  .research-content li {
    margin: 0.5rem 0;
    line-height: 1.7;
  }

  /* Responsive tables */
  @media (max-width: 768px) {
    .research-content table {
      font-size: 0.8rem;
    }

    .research-content th,
    .research-content td {
      padding: 0.5rem;
    }
  }
</style>
